from aiogram import types
from main import dp, bot, db
from datetime import datetime
from student_schedule_data import student_schedule
from schedule_univers import get_today_schedule_from_data, get_week_schedule_from_data


# @dp.message_handler()
# async def start(message: types.Message):
#     print(message)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    user_id = message.from_user.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    if not db.check_user_exist(user_id):
        db.add_student_info(user_id, message.text)
        await message.answer(
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞.\n"
            "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –≤–∞–º –≤ —Å–ª–µ–¥—É—é—â–∏–µ –º–æ–º–µ–Ω—Ç—ã:\n"
            "- –í 9:00 —É—Ç—Ä–∞\n"
            "- –í 14:30\n"
            "- –ó–∞ 10 –º–∏–Ω—É—Ç –¥–æ –Ω–∞—á–∞–ª–∞ –∫–∞–∂–¥–æ–π –ø–∞—Ä—ã."
        )
    else:
        await message.answer(
            "–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞.\n"
            "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –≤–∞–º –≤ —Å–ª–µ–¥—É—é—â–∏–µ –º–æ–º–µ–Ω—Ç—ã:\n"
            "- –í 9:00 —É—Ç—Ä–∞\n"
            "- –í 14:30\n"
            "- –ó–∞ 10 –º–∏–Ω—É—Ç –¥–æ –Ω–∞—á–∞–ª–∞ –∫–∞–∂–¥–æ–π –ø–∞—Ä—ã."
        )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥–∞—Ö
    await message.answer(
        '<b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n'
        '<code>/schedule</code> - –ø–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –¥–µ–Ω—å\n'
        '<code>/week_schedule</code> - –ø–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é\n'
        '<code>/help</code> - –ø–æ–ª—É—á–∏—Ç—å —Å–ø—Ä–∞–≤–∫—É –æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥–∞—Ö',
        parse_mode='HTML'
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help (–≤—Ç–æ—Ä–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ)
@dp.message_handler(commands=['help'])
async def help(message: types.Message):
    await message.answer(
        '<b>–ü—Ä–∏–≤–µ—Ç!</b>\n–Ø –±–æ—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è. \n–ù–∞–∂–º–∏:\n<code>/schedule</code> –∏ –ø–æ–ª—É—á–∏ '
        '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –¥–µ–Ω—å\n<code>/week_schedule</code> –¥–ª—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ –Ω–µ–¥–µ–ª—é. üòä\n'
        '–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏–ª–∏ –∂–∞–ª–æ–±—ã –Ω–∞ –±–æ—Ç–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ '
        '—Å–æ–∑–¥–∞—Ç–µ–ª—é –ø–æ —Ç—ç–≥—É –≤ Telegram: @KurnaevDV',
        parse_mode='HTML')

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /schedule
@dp.message_handler(commands=['schedule'])
async def get_schedule(message: types.Message):
    chat_id = message.chat.id
    await send_schedule(chat_id)


@dp.message_handler(commands=['week_schedule'])
async def get_week_schedule(message: types.Message):
    chat_id = message.chat.id
    week_schedule = await get_week_schedule_from_data(student_schedule)

    if week_schedule:
        msg = "<b>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é:</b>\n\n"
        for day, day_schedule in week_schedule.items():
            msg += f"<u>{day}:</u>\n"
            for date, para_data in day_schedule.items():
                formatted_date = format_date(date)
                msg += f"<i>–î–∞—Ç–∞:</i> {formatted_date}\n"
                for para, details in para_data.items():
                    # msg += f"<i>–ü–∞—Ä–∞ {para}:</i>\n"
                    msg += f"<i>–í—Ä–µ–º—è:</i> {details['–í—Ä–µ–º—è']}\n"
                    msg += f"<i>–ü—Ä–µ–¥–º–µ—Ç:</i> {details['–ü—Ä–µ–¥–º–µ—Ç']}\n"
                    msg += f"<i>–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å:</i> {details['–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å']}\n"
                    msg += f"<i>–§–æ—Ä–º–∞—Ç –æ–±—É—á–µ–Ω–∏—è:</i> {details['–§–æ—Ä–º–∞—Ç –æ–±—É—á–µ–Ω–∏—è']}\n"
                    msg += f"<i>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</i> <u>{details['–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è']}</u>\n\n"

        await bot.send_message(chat_id, msg, parse_mode='HTML')
    else:
        await bot.send_message(chat_id, "–ù–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–µ—Ç.")


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫—Ä–∞—Å–∏–≤–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
async def send_schedule(chat_id):
    today_schedule = get_today_schedule_from_data(student_schedule)
    if today_schedule:
        msg = "<b>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:</b>\n"
        for para, para_data in today_schedule.items():
            # msg += f"<u>–ü–∞—Ä–∞ {para}:</u>\n"
            msg += f"<i>–í—Ä–µ–º—è:</i> {para_data['–í—Ä–µ–º—è']}\n" \
                   f"<i>–ü—Ä–µ–¥–º–µ—Ç:</i> {para_data['–ü—Ä–µ–¥–º–µ—Ç']}\n" \
                   f"<i>–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å:</i> {para_data['–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å']}\n" \
                   f"<i>–§–æ—Ä–º–∞—Ç –æ–±—É—á–µ–Ω–∏—è:</i> {para_data['–§–æ—Ä–º–∞—Ç –æ–±—É—á–µ–Ω–∏—è']}\n" \
                   f"<i>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</i> {para_data['–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è']}\n\n"
        await bot.send_message(chat_id, msg, parse_mode='HTML')
    else:
        await bot.send_message(chat_id, "–ù–∞ —Å–µ–≥–æ–¥–Ω—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–µ—Ç.")


def format_date(date_str):
    date_obj = datetime.strptime(date_str, "%Y-%m-%d")
    return date_obj.strftime("%d.%m.%Y")
